{"version":3,"sources":["default.gif","store/reducer.js","components/ImageForm.js","components/DefaultImage.js","components/Result.js","services/getImage.js","views/home.js","views/about.js","Router.js","Navigation.js","AppRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","resultImage","timeLeft","hasResult","hasCounter","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","imageUrl","Form","styled","form","_templateObject","Input","input","_templateObject2","Button","button","_templateObject3","ImageForm","props","onSubmit","value","onChange","react_default","a","createElement","pattern","inputMode","defaultValue","defaultProps","ImagePreview","div","DefaultImage_templateObject","DefaultImage","src","image","alt","ResultImage","Result_templateObject","Counter","Result_templateObject2","Result","index_es","endDate","getImage","_ref","asyncToGenerator","regenerator_default","mark","_callee","imageId","_ref2","data","wrap","_context","prev","next","axios","get","concat","sent","abrupt","imageSource","url","error","stop","this","_x","apply","Wrapper","home_templateObject","Home","_this2","_this$props","onGetImageUrl","onDoesNotExistImage","onDeafultState","handleSubmit","event","resultResponse","latestImage","currentDate","resultEndDate","preventDefault","GetImage","hasOwnProperty","parseInt","match","Date","getTime","t0","components_Result","components_DefaultImage","components_ImageForm","setState","target","Component","connect","dispatch","about_templateObject","Header","h1","about_templateObject2","SubHeader","h2","about_templateObject3","Line","_templateObject4","LineBordered","_templateObject5","Code","pre","_templateObject6","About","link","href","about_Wrapper","Router","Switch","Redirect","exact","from","to","Route","path","component","Navigation_templateObject","Nav","nav","Navigation_templateObject2","Navigation","Navigation_Wrapper","NavLink","src_Router","store","createStore","AppRoute","history","createHistory","es","es_Router","App","src_AppRoute","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cc1d1ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.f796d7bb.gif\";","export const initialState = {\n  resultImage: '',\n  timeLeft: 0,\n  hasResult: false,\n  hasCounter: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_IMAGE_URL':\n      return {\n        ...state,\n        resultImage: action.imageUrl,\n        hasResult: true,\n        hasCounter: false,\n      };\n\n    case 'IMAGE_DOES_NOT_EXIST':\n      return {\n        ...state,\n        hasResult: true,\n        hasCounter: true,\n        timeLeft: action.timeLeft,\n      };\n\n    case 'DEFAULT_STATE':\n      return {\n        ...state,\n        hasResult: false,\n        hasCounter: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 350px;\n  margin: 20px;\n`;\n\nconst Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin: 0 0 20px;\n  padding: 5px 15px;\n  font-size: 17px;\n  line-height: 1.5;\n  color: #495057;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ced4da;\n  border-radius: 10px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n  width: 200px;\n  height: 40px;\n  padding: 3px 15px;\n  margin: auto;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  user-select: none;\n  border: 1px solid #007fb8;\n  background-color: #007fb8;\n  color: #fff;\n  font-size: 17px;\n  border-radius: 20px;\n  font-weight: 500;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ImageForm = (props) => {\n  const { onSubmit, value, onChange } = props;\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        type=\"number\"\n        pattern=\"[0-9]*\"\n        inputMode=\"numeric\"\n        onChange={onChange}\n        defaultValue={value}\n      />\n      <Button type=\"submit\">Get inspired</Button>\n    </Form>\n  );\n};\n\nImageForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nImageForm.defaultProps = {\n  value: '',\n};\n\nexport default ImageForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport image from '../default.gif';\n\nconst ImagePreview = styled.div`\n  height: 400px;\n  margin: 20px;\n  text-align: center;\n\n  img {\n    max-width: 100%;\n   max-height: 100%;\n  }\n`;\n\nconst DefaultImage = () => (\n  <ImagePreview>\n    <img\n      src={image}\n      alt=\"default\"\n    />\n  </ImagePreview>\n);\n\nexport default DefaultImage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Countdown from 'react-downcount';\n\nconst ResultImage = styled.div`\n  height: 400px;\n  margin: 20px;\n  text-align: center;\n\n  img {\n   max-width: 100%;\n   max-height: 100%;\n  }\n`;\n\nconst Counter = styled.div`\n  color: #333;\n  font-size: 16px;\n\n  p {\n    font-size: 13px;\n  }\n`;\n\nconst Result = (props) => {\n  const { resultImage, hasCounter, timeLeft } = props;\n\n  return (\n    <ResultImage>\n      { hasCounter\n        ? (\n          <Counter>\n            <p>Time left for new picture</p>\n            <Countdown\n              endDate={timeLeft}\n            />\n          </Counter>\n        )\n        : (\n          <img\n            src={resultImage}\n            alt=\"result\"\n          />\n        )\n      }\n    </ResultImage>\n  );\n};\n\nResult.propTypes = {\n  resultImage: PropTypes.string.isRequired,\n  hasCounter: PropTypes.bool.isRequired,\n  timeLeft: PropTypes.number.isRequired,\n};\n\nexport default Result;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://archillect-api.now.sh/visuals';\n\nexport default async (imageId) => {\n  const { data } = await axios.get(`${BASE_URL}/${imageId}`);\n  return data.imageSource ? { url: data.imageSource } : { error: data.error };\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImageForm from '../components/ImageForm';\nimport DefaultImage from '../components/DefaultImage';\nimport Result from '../components/Result';\nimport GetImage from '../services/getImage';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nclass Home extends Component {\n  state = {\n    value: '',\n  };\n\n  render() {\n    const {\n      hasResult,\n      hasCounter,\n      resultImage,\n      timeLeft,\n      onGetImageUrl,\n      onDoesNotExistImage,\n      onDeafultState,\n    } = this.props;\n\n    const { value } = this.state;\n\n    const handleChange = (event) => {\n      this.setState({ value: event.target.value });\n    };\n\n    const handleSubmit = async (event) => {\n      event.preventDefault();\n\n      try {\n        const resultResponse = await GetImage(value);\n        const responseImage = resultResponse.hasOwnProperty('url');\n\n        if (responseImage) {\n          onGetImageUrl(resultResponse.url);\n        } else if (resultResponse.error !== '') {\n          const latestImage = parseInt(resultResponse.error.match(/(?:\\D*(\\d+)){3}/)[1], 10);\n          const currentDate = new Date();\n          const resultEndDate = parseInt((currentDate.getTime() + (value - latestImage) * 24 * 60 * 60 * 1000), 10);\n          onDoesNotExistImage(resultEndDate);\n        } else {\n          onDeafultState();\n        }\n      } catch (error) {\n        onDeafultState();\n      }\n    };\n\n    return (\n      <Wrapper>\n        { hasResult\n          ? (\n            <Result\n              resultImage={resultImage}\n              hasCounter={hasCounter}\n              timeLeft={timeLeft}\n            />\n          )\n          : (\n            <DefaultImage />\n          )\n        }\n        <ImageForm\n          value={value}\n          onSubmit={handleSubmit}\n          onChange={handleChange}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nHome.propTypes = {\n  resultImage: PropTypes.string.isRequired,\n  timeLeft: PropTypes.number.isRequired,\n  hasCounter: PropTypes.bool.isRequired,\n  hasResult: PropTypes.bool.isRequired,\n  onGetImageUrl: PropTypes.func.isRequired,\n  onDoesNotExistImage: PropTypes.func.isRequired,\n  onDeafultState: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  resultImage: state.resultImage,\n  timeLeft: state.timeLeft,\n  hasResult: state.hasResult,\n  hasCounter: state.hasCounter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetImageUrl: imageUrl => dispatch({ type: 'GET_IMAGE_URL', imageUrl }),\n  onDoesNotExistImage: timeLeft => dispatch({ type: 'IMAGE_DOES_NOT_EXIST', timeLeft }),\n  onDeafultState: () => dispatch({ type: 'DEFAULT_STATE' }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: auto;\n  text-align: left;\n`;\n\nconst Header = styled.h1`\n  margin: 0 0 15px;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst SubHeader = styled.h2`\n  margin: 20px 0 10px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst Line = styled.p`\n  margin: 0 0 10px;\n  color: #333;\n  font-size: 15px;\n  line-height: 18px;\n`;\n\nconst LineBordered = styled.p`\n  margin: 0 0 10px;\n  padding: 2px 0 2px 10px;\n  border-left: solid 4px #ddd;\n  color: #333;\n  font-size: 15px;\n  line-height: 18px;\n`;\n\nconst Code = styled.pre`\n  width: 100%;\n  padding: 16px;\n  border-radius: 3px;\n  background-color: #f6f8fa;\n  font-size: 13px;\n  overflow: auto;\n`;\n\nconst About = () => {\n  const link = <a href=\"http://archillect.com\">Archillect API</a>;\n  const code = `{\n  \"sourceLinks\": [\n    \"https://www.google.com/searchbyimage?safe=offℑurl=http://78.media.tumblr.com/a06af535eb801c32ff60c5dbb0031d13/tumblr_olhnlsSjnS1vczpxxo1_400.gif\"\n  ],\n  \"imageSource\": \"http://78.media.tumblr.com/a06af535eb801c32ff60c5dbb0031d13/tumblr_olhnlsSjnS1vczpxxo1_400.gif\",\n  \"original\": \"http://archillect.com/147836\",\n  \"id\": 147836\n}`;\n\n  return (\n    <Wrapper>\n      <Header>About the App</Header>\n      <Line>\n        This app uses the\n        {' '}\n        {link}\n        {' '}\n        for search visuals by [ID].\n      </Line>\n      <SubHeader>\n        <strong>Brings one visual [ID] specified</strong>\n      </SubHeader>\n      <LineBordered>GET https://archillect-api.now.sh/visuals/[ID]</LineBordered>\n      <Line>Example response:</Line>\n      <Code>\n        <code>{code}</code>\n      </Code>\n    </Wrapper>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router';\nimport Home from './views/home';\nimport About from './views/about';\n\nconst Router = () => (\n  <div>\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/try-archillect\" />\n      <Route path=\"/try-archillect\" component={Home} />\n      <Route path=\"/about\" component={About} />\n    </Switch>\n  </div>\n);\n\nexport default Router;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Router from './Router';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  padding: 50px 30px 0;\n`;\n\nconst Nav = styled.nav`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  padding: 15px 50px;\n  background-color: #f2f2f2;\n\n  a {\n    display: inline-block;\n    padding: 3px 10px;\n    color: #333;\n    font-size: 17px;\n    text-decoration: none;\n\n    &:hover {\n      opacity: .7;\n    }\n\n    &.active {\n      color: #007fb8;\n    }\n  }\n`;\n\nconst Navigation = () => (\n  <Wrapper>\n    <Nav>\n      <NavLink\n        to=\"/try-archillect\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/about\"\n      >\n        About\n      </NavLink>\n    </Nav>\n    <div>\n      <Router />\n    </div>\n  </Wrapper>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { Router, Route } from 'react-router';\nimport createHistory from 'history/createBrowserHistory';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducer';\nimport Navigation from './Navigation';\n\nconst store = createStore(reducer);\n\nconst AppRoute = () => {\n  const history = createHistory();\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Route path=\"/\" component={Navigation} />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default AppRoute;\n","import React from 'react';\nimport AppRoute from './AppRoute';\n\nconst App = () => (\n  <AppRoute />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      /* eslint-disable-next-line */\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}